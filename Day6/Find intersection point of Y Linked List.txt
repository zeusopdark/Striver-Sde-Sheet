import java.util.* ;
import java.io.*; 
/************************************
	 
	 //Following is the class structure of the LinkedListNode class:
	 
	  class LinkedListNode<T> {
		public T data;
		public LinkedListNode<T> next;
		
		public LinkedListNode(T data) {
			this.data = data;
			this.next = null;
		}
	}

*****************************************/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
//Method 1

        if(headA==null||headB==null)return null;
        ListNode a_pointer=headA;
        ListNode  b_pointer=headB;
        while(a_pointer!=b_pointer){//
            if(a_pointer==null){
                a_pointer=headB;
                  }
            else{
                a_pointer=a_pointer.next;
            }
            if(b_pointer==null){
                b_pointer=headA;//same here we just rest it to the head A 
            }
            else{
               b_pointer= b_pointer.next;
            }
        }
        return a_pointer;

//Method 2
        /* Set<ListNode> set = new HashSet();
        while(headB != null) {
            set.add(headB);//we are adding head not value of that head;
            headB = headB.next;
        }
        while(headA != null) {
            if (set.contains(headA)) {
                return headA;
            }
            headA = headA.next;
        }
        return null;*/
    }
}