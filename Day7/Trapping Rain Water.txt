class Solution {
    public int trap(int[] height) {
        
        //At a particular index the maximum water that can be trapped is the min of max height at its left and max height at its right minus the total height at that index;
        
        int []prefix=new int[height.length];//prefix height in an increasing order
        int []suffix=new int[height.length];//suffix height in an increasing order from back of the array.
        prefix[0]=height[0];
        for(int i=1;i<height.length;i++){
            prefix[i]=Math.max(height[i],prefix[i-1]);
        }
        suffix[height.length-1]=height[height.length-1];
        for(int i=height.length-2;i>=0;i--){
            suffix[i]=Math.max(suffix[i+1],height[i]);
        }
        
        int total_water=0;
        for(int i=0;i<height.length;i++){
            total_water=total_water+(Math.min(suffix[i],prefix[i])-height[i]);
        }
        return total_water;
    }
}